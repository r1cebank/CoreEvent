<ScrollView
    ref={(c) => { this.buttonDrawer = c; }}
    horizontal={true}
    automaticallyAdjustContentInsets={false}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
    scrollEventThrottle={200}
    style={styles.buttonDrawer}
    contentContainerStyle={styles.buttonDrawerContainer}
    testID="RestaurantList">
    {icons.map((icon, index) => {
        return (
            <Icon
                reverse
                key={index}
                name={icon.iconName}
                onPress={() => {}}
                color={Colors[icon.color]} />
        );
    })}
</ScrollView>

{(() => {
    if (this.props.config.attributes.show_carousel) {
        return (
            <Carousel
                delay={10000}
                style={styles.carousel}
                autoplay>
                {this.props.carousel.map((carouselImage, index) => {
                    return (
                        <Components.CarouselImage
                            key={index}
                            carouselImage={carouselImage}
                            onPress={this.openCarousel} />
                    );
                })}
            </Carousel>
        );
    }
    return null;
})()}
